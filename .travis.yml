language: objective-c
osx_image: xcode8
env:
  global:
  - FRAMEWORK_NAME=Validator
  - LC_CTYPE=en_US.UTF-8
  - LANG=en_US.UTF-8
  - PROJECT=source/ValidationKit.xcodeproj
  - IOS_FRAMEWORK_SCHEME="ValidationKit iOS"
  - OSX_FRAMEWORK_SCHEME="ValidationKit macOS"
  - TVOS_FRAMEWORK_SCHEME="ValidationKit tvOS"
  - WATCHOS_FRAMEWORK_SCHEME="ValidationKit watchOS"
  - IOS_SDK=iphonesimulator10.0
  - MACOS_SDK=macosx10.12
  - TVOS_SDK=appletvsimulator10.0
  - WATCHOS_SDK=watchsimulator3.0
  matrix:
    - DESTINATION="OS=10.0,name=iPhone 6S"          SCHEME="$IOS_FRAMEWORK_SCHEME"     SDK="$IOS_SDK"     CONFIGURATION="Debug" RUN_TESTS="NO"
    - DESTINATION="arch=x86_64"                     SCHEME="$OSX_FRAMEWORK_SCHEME"     SDK="$MACOS_SDK"   CONFIGURATION="Debug" RUN_TESTS="YES"
    - DESTINATION="OS=10.0,name=Apple TV 1080p"     SCHEME="$TVOS_FRAMEWORK_SCHEME"    SDK="$TVOS_SDK"    CONFIGURATION="Debug" RUN_TESTS="NO"
    - DESTINATION="OS=3.0,name=Apple Watch - 42mm"  SCHEME="$WATCHOS_FRAMEWORK_SCHEME" SDK="$WATCHOS_SDK" CONFIGURATION="Debug" RUN_TESTS="NO"

before_install:
  - brew update
  - brew outdated carthage || brew upgrade carthage
  - gem install xcpretty 

before_deploy:
  - carthage build --no-skip-current
  - carthage archive $FRAMEWORK_NAME

script:
  - set -o pipefail
  - if [ $RUN_TESTS == "YES" ]; then
      xcodebuild -project "$PROJECT" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration "$CONFIGURATION" ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES test | xcpretty -c;
    else
      xcodebuild -project "$PROJECT" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration "$CONFIGURATION" ONLY_ACTIVE_ARCH=NO build | xcpretty -c;
    fi

after_success:
  - if [ $RUN_TESTS == "YES" ]; then
      bash <(curl -s https://codecov.io/bash);
    fi